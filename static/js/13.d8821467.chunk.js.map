{"version":3,"sources":["modules/vouchers/containers/Order/Order.utils.ts","modules/vouchers/containers/Order/components/VoucherDetails.tsx","modules/vouchers/containers/Order/Order.styles.ts","modules/vouchers/containers/Order/Order.tsx"],"names":["GET_ORDER","gql","CREATE_ORDER","DESTINATION","destinationOptions","value","title","placeholders","name","email","BadgeContainer","styled","Grid","VoucherNameContainer","useStyles","makeStyles","theme","createStyles","orderInfo","height","orderImg","width","VoucherDetails","voucher","tags","expirationDate","imageUrl","price","promotion","classes","container","spacing","className","justify","alignItems","item","xs","Avatar","alt","src","direction","map","tag","i","key","Typography","variant","color","oldPrice","newPrice","date","Date","GreyText","colors","primary","SquareButton","BaseButton","RemoveButtonContainer","PriceContainer","VouchersNumberContainer","BonusInput","TextInput","black","text","RestrictedButton","Button","root","background","flexGrow","paper","padding","textAlign","palette","secondary","orderConfig","main","orderBusiness","flex","Order","id","useId","useQuery","variables","data","useState","currentBonusPrice","setCurrentBonusPrice","totalBonusPrice","setTotalBonusPrice","submitBonusPrice","Number","bonusPriceProps","onChange","val","placeholder","useBonusPrice","bonusPrice","vouchersNumber","setVouchersNumber","addVoucher","removeVoucher","vouchersPrice","toFixed","useVouchersNumber","destination","setDestination","setName","setEmail","note","setNote","destinationProps","controlledValue","nameProps","emailProps","noteProps","useOrderForm","useMutation","createOrder","component","business","InputProps","startAdornment","InputAdornment","position","onClick","description","Select","options","count","voucherId"],"mappings":"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","file":"static/js/13.d8821467.chunk.js","sourcesContent":["import { gql } from 'apollo-boost'\nimport { useState } from 'react'\n\nexport const GET_ORDER = gql`\n  query Voucher($id: Int!) {\n    voucher(where: { id: $id }) {\n      id\n      name\n      imageUrl\n      description\n      price\n      promotion\n      tags {\n        name\n      }\n      business {\n        name\n      }\n    }\n  }\n`\n\nexport interface CreateOrder {\n  createOneOrder: {\n    id: number\n  }\n}\n\nexport const CREATE_ORDER = gql`\n  mutation CreateOneOrder(\n    $email: String!\n    $name: String!\n    $count: Int\n    $voucherId: Int\n  ) {\n    createOneOrder(\n      data: {\n        email: $email\n        name: $name\n        count: $count\n        voucher: { connect: { id: $voucherId } }\n      }\n    ) {\n      id\n    }\n  }\n`\n\nexport const useVouchersNumber = (price = 0, bonusPrice = 0) => {\n  const [vouchersNumber, setVouchersNumber] = useState(0)\n  const addVoucher = () => setVouchersNumber(vouchersNumber + 1)\n  const removeVoucher = () =>\n    vouchersNumber > 0 && setVouchersNumber(vouchersNumber - 1)\n\n  return {\n    addVoucher,\n    removeVoucher,\n    vouchersNumber,\n    vouchersPrice: (vouchersNumber * price + bonusPrice).toFixed(2),\n  }\n}\n\nconst DESTINATION = {\n  MYSELF: 'MYSELF',\n  FRIEND: 'FRIEND',\n}\n\nexport const destinationOptions = [\n  { value: DESTINATION.MYSELF, title: 'The Voucher is for myself' },\n  { value: DESTINATION.FRIEND, title: 'The Voucher is for someone else' },\n]\n\nconst placeholders = {\n  [DESTINATION.MYSELF]: {\n    name: 'Enter your full name',\n    email: 'Enter your email',\n  },\n  [DESTINATION.FRIEND]: {\n    name: \"Enter friend's full name\",\n    email: \"Enter friend's email\",\n  },\n}\n\nexport const useOrderForm = () => {\n  const [destination, setDestination] = useState(DESTINATION.MYSELF)\n\n  const [name, setName] = useState('')\n  const [email, setEmail] = useState('')\n  const [note, setNote] = useState('')\n  return {\n    destinationProps: {\n      controlledValue: destination,\n      onChange: (val: any) => setDestination(val),\n    },\n    nameProps: {\n      value: name,\n      onChange: (val: any) => setName(val),\n      placeholder: placeholders[destination].name,\n    },\n    emailProps: {\n      value: email,\n      onChange: (val: any) => setEmail(val),\n      placeholder: placeholders[destination].email,\n    },\n    noteProps: destination === DESTINATION.FRIEND && {\n      value: note,\n      onChange: (val: any) => setNote(val),\n      placeholder: 'Say something to your friend!',\n    },\n  }\n}\n\nexport const useBonusPrice = () => {\n  const [currentBonusPrice, setCurrentBonusPrice] = useState('')\n  const [totalBonusPrice, setTotalBonusPrice] = useState(0)\n\n  return {\n    submitBonusPrice: () => {\n      setTotalBonusPrice(totalBonusPrice + (Number(currentBonusPrice) || 0))\n      setCurrentBonusPrice('0.00')\n    },\n    bonusPriceProps: {\n      value: currentBonusPrice,\n      onChange: (val: any) => setCurrentBonusPrice(val),\n      placeholder: '0.00',\n    },\n    totalBonusPrice,\n  }\n}\n","import React from 'react'\nimport {\n  Typography,\n  Grid,\n  Avatar,\n  makeStyles,\n  createStyles,\n  Theme,\n} from '@material-ui/core'\nimport { Discount, Countdown, Badge } from 'components'\nimport { Tag } from 'types'\nimport styled from 'styled-components'\n\nconst BadgeContainer = styled(Grid)`\n  > div {\n    margin-right: 15px;\n  }\n`\n\nconst VoucherNameContainer = styled(Grid)`\n  margin-bottom: 22px !important;\n`\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    orderInfo: {\n      height: '400px',\n    },\n    orderImg: {\n      height: '340px',\n      width: '340px',\n    },\n  })\n)\n\ninterface VoucherDetailsProps {\n  voucher?: {\n    tags?: Tag[]\n    name?: string\n    expirationDate?: string\n    imageUrl?: string\n    price?: number\n    promotion?: number\n  }\n}\n\nconst VoucherDetails: React.FC<VoucherDetailsProps> = ({\n  voucher: { tags = [], name, expirationDate, imageUrl, price, promotion } = {},\n}) => {\n  const classes = useStyles()\n  return (\n    <Grid\n      container\n      spacing={0}\n      className={classes.orderInfo}\n      justify=\"center\"\n      alignItems=\"center\"\n    >\n      <Grid\n        container\n        item\n        xs={5}\n        spacing={1}\n        justify=\"center\"\n        alignItems=\"center\"\n      >\n        <Avatar className={classes.orderImg} alt=\"order-image\" src={imageUrl} />\n      </Grid>\n      <Grid\n        container\n        xs={7}\n        direction=\"column\"\n        justify=\"space-between\"\n        spacing={1}\n      >\n        <BadgeContainer item xs={12}>\n          {tags && tags.map((tag, i) => <Badge key={i}>{tag.name}</Badge>)}\n        </BadgeContainer>\n        <VoucherNameContainer item xs={12}>\n          <Typography variant=\"h4\" color=\"textPrimary\">\n            {name}\n          </Typography>\n        </VoucherNameContainer>\n        <Grid container xs={12}>\n          <Grid item xs={6}>\n            <Discount\n              oldPrice={price || 0}\n              newPrice={promotion || 0}\n              alignItems=\"flex-start\"\n            />\n          </Grid>\n          <Grid item xs={6}>\n            <Countdown\n              title={'Ends in'}\n              date={new Date(expirationDate || new Date())}\n            />\n          </Grid>\n        </Grid>\n      </Grid>\n    </Grid>\n  )\n}\n\nexport default VoucherDetails\n","import { Typography, Button as BaseButton } from '@material-ui/core'\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles'\nimport Grid from '@material-ui/core/Grid'\nimport { Button } from 'components'\nimport { colors } from 'config'\nimport styled from 'styled-components'\nimport TextInput from 'components/TextInput'\n\nexport const GreyText = styled(Typography)`\n  color: ${colors.primary[50]};\n`\nexport const SquareButton = styled(BaseButton)`\n  background-color: ${colors.primary[55]} !important;\n  width: 42px;\n  height: 42px;\n  min-width: 0 !important;\n  padding: 0 !important;\n  > span {\n    padding: 0 !important;\n    font-size: 24px !important;\n  }\n`\n\nexport const RemoveButtonContainer = styled(Grid)`\n  > button > span {\n    color: #fe3f59 !important;\n  }\n`\n\nexport const PriceContainer = styled(Grid)`\n  margin-top: -25px !important;\n  margin-bottom: 25px !important;\n`\n\nexport const VouchersNumberContainer = styled(Grid)`\n  margin-top: 15px !important;\n  margin-bottom: 15px !important;\n  > div:nth-child(2) {\n    border-radius: 5px;\n    padding: 2px;\n    background-color: ${colors.primary[55]} !important;\n  }\n`\n\nexport const BonusInput = styled(TextInput)`\n  width: 100px !important;\n  margin-right: 20px !important;\n  * {\n    color: ${colors.black} !important;\n  }\n  > div {\n    font-weight: 800;\n    background: ${colors.text[50]};\n  }\n  input {\n    padding: 14px !important;\n  }\n`\n\nexport const RestrictedButton = styled(Button)`\n  max-height: 50px;\n`\n\nexport const useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      background: '#000',\n      flexGrow: 1,\n    },\n    paper: {\n      padding: theme.spacing(2),\n      textAlign: 'center',\n      color: theme.palette.text.secondary,\n    },\n    orderConfig: {\n      textAlign: 'center',\n      height: '90vh',\n      background: theme.palette.primary.main,\n    },\n    orderInfo: {\n      height: '400px',\n    },\n    orderBusiness: {\n      flex: '1 1 auto',\n      background: '#161616',\n    },\n    orderImg: {\n      height: '340px',\n      width: '340px',\n    },\n  })\n)\n","import React from 'react'\nimport { useQuery, useMutation } from '@apollo/react-hooks'\nimport { Typography, InputAdornment } from '@material-ui/core'\nimport Grid from '@material-ui/core/Grid'\nimport { Button } from 'components'\nimport {\n  GET_ORDER,\n  useVouchersNumber,\n  destinationOptions,\n  useOrderForm,\n  useBonusPrice,\n  CREATE_ORDER,\n  CreateOrder,\n} from './Order.utils'\nimport { VoucherData } from 'types'\nimport { useId } from 'utils'\nimport Select from 'components/Select'\nimport TextInput from 'components/TextInput'\nimport VoucherDetails from './components/VoucherDetails'\n// import OrderCompleteModal from './components/OrderCompleteModal'\nimport {\n  GreyText,\n  SquareButton,\n  RemoveButtonContainer,\n  PriceContainer,\n  VouchersNumberContainer,\n  BonusInput,\n  RestrictedButton,\n  useStyles,\n} from './Order.styles'\n\ninterface OrderProps {}\n\nconst Order: React.FC<OrderProps> = () => {\n  const id = useId()\n  const { data: { voucher } = {} } = useQuery<VoucherData>(GET_ORDER, {\n    variables: { id },\n  })\n\n  const { totalBonusPrice, submitBonusPrice, bonusPriceProps } = useBonusPrice()\n  const {\n    addVoucher,\n    removeVoucher,\n    vouchersNumber,\n    vouchersPrice,\n  } = useVouchersNumber(voucher?.promotion || voucher?.price, totalBonusPrice)\n  const { destinationProps, nameProps, emailProps, noteProps } = useOrderForm()\n\n  const [\n    createOrder,\n    // { loading: mutationLoading, error: mutationError, data },\n  ] = useMutation<CreateOrder>(CREATE_ORDER)\n\n  const classes = useStyles()\n  return (\n    <div className={classes.root}>\n      {/* <OrderCompleteModal />  */}\n      <Grid container spacing={0}>\n        <Grid container xs={8} spacing={0}>\n          <Grid container direction=\"column\">\n            <VoucherDetails voucher={voucher || {}} />\n            <Grid container spacing={0} className={classes.orderBusiness}>\n              <Grid item xs={1}></Grid>\n              <Grid container item xs={11}>\n                <Grid item xs={12}>\n                  <GreyText variant=\"h6\">\n                    Add other Vouchers from{' '}\n                    <Typography\n                      color=\"textPrimary\"\n                      component=\"span\"\n                      variant=\"h6\"\n                    >\n                      {voucher?.business?.name}\n                    </Typography>\n                  </GreyText>\n                </Grid>\n                <Grid item xs={12}>\n                  <Grid item xs={12}>\n                    <Typography variant=\"h5\" color=\"textPrimary\">\n                      Back this{' '}\n                      <Typography\n                        color=\"secondary\"\n                        component=\"span\"\n                        variant=\"h5\"\n                      >\n                        business\n                      </Typography>\n                    </Typography>\n                    <Typography variant=\"body1\" color=\"textSecondary\">\n                      Do you want to show some extra love ? Pick the price and\n                      add it to the total amount of your current Voucher order.\n                    </Typography>\n                    <br />\n                  </Grid>\n                  <BonusInput\n                    {...bonusPriceProps}\n                    InputProps={{\n                      startAdornment: (\n                        <InputAdornment position=\"start\">€</InputAdornment>\n                      ),\n                    }}\n                  />\n\n                  <RestrictedButton\n                    onClick={() => submitBonusPrice()}\n                    variant=\"outlined\"\n                  >\n                    Add to amount\n                  </RestrictedButton>\n                </Grid>\n              </Grid>\n            </Grid>\n          </Grid>\n        </Grid>\n        <Grid\n          container\n          xs={4}\n          className={classes.orderConfig}\n          justify=\"center\"\n          alignItems=\"center\"\n        >\n          <Grid container xs={1}></Grid>\n          <Grid container xs={10} spacing={3}>\n            <Grid item xs={12}>\n              <Typography variant=\"h4\" color=\"textPrimary\">\n                Complete Your{' '}\n                <Typography color=\"secondary\" component=\"span\" variant=\"h4\">\n                  order\n                </Typography>\n              </Typography>\n            </Grid>\n            <Grid item xs={12}>\n              <Typography variant=\"body1\" color=\"textSecondary\">\n                {voucher?.description}\n              </Typography>\n            </Grid>\n            <Grid item xs={12}>\n              <GreyText variant=\"h6\">Fill the fields below</GreyText>\n            </Grid>\n            <Grid item xs={12}>\n              <Select options={destinationOptions} {...destinationProps} />\n            </Grid>\n            <Grid item xs={12}>\n              <TextInput {...nameProps} />\n            </Grid>\n            <Grid item xs={12}>\n              <TextInput {...emailProps} />\n            </Grid>\n            {noteProps && (\n              <Grid item xs={12}>\n                <TextInput {...noteProps} />\n              </Grid>\n            )}\n            <VouchersNumberContainer container xs={12} justify=\"space-between\">\n              <RemoveButtonContainer item xs={2}>\n                <SquareButton onClick={removeVoucher} color=\"secondary\">\n                  -\n                </SquareButton>\n              </RemoveButtonContainer>\n              <Grid item xs={8}>\n                <Typography variant=\"h6\" color=\"textPrimary\">\n                  Buy {vouchersNumber} Vouchers\n                </Typography>\n              </Grid>\n              <Grid item xs={2}>\n                <SquareButton onClick={addVoucher} color=\"secondary\">\n                  +\n                </SquareButton>\n              </Grid>\n            </VouchersNumberContainer>\n            <Grid item xs={12}>\n              <GreyText variant=\"h5\">Total Amount</GreyText>\n            </Grid>\n            <PriceContainer item xs={12}>\n              <Typography variant=\"h4\" color=\"textPrimary\">\n                € {vouchersPrice}\n              </Typography>\n            </PriceContainer>\n            <Grid item xs={12}>\n              <Button\n                variant=\"contained\"\n                onClick={() => {\n                  createOrder({\n                    variables: {\n                      email: emailProps.value,\n                      name: nameProps.value,\n                      count: vouchersNumber,\n                      voucherId: id,\n                    },\n                    // onCompleted: (data: CreateOrder) => {},\n                  })\n                }}\n              >\n                Go to Payment\n              </Button>\n            </Grid>\n          </Grid>\n          <Grid container xs={1}></Grid>\n        </Grid>\n      </Grid>\n    </div>\n  )\n}\n\nexport default Order\n"],"sourceRoot":""}