### This file was autogenerated by GraphQL Nexus
### Do not make changes to this file directly


type Business {
  address: String!
  amount: Float!
  category: Category
  city: String!
  description: String!
  history: String
  id: Int!
  imageUrl: String!
  name: String!
  siteUrl: String
  vouchers: [Voucher!]!
}

input BusinessCreateOneWithoutVouchersInput {
  connect: BusinessWhereUniqueInput
  create: BusinessCreateWithoutVouchersInput
}

input BusinessCreateWithoutVouchersInput {
  address: String!
  amount: Float!
  category: CategoryCreateOneWithoutBusinessesInput
  city: String!
  description: String!
  history: String
  imageUrl: String!
  name: String!
  siteUrl: String
  type: String!
}

input BusinessWhereUniqueInput {
  id: Int
}

type Category {
  businesses(after: BusinessWhereUniqueInput, before: BusinessWhereUniqueInput, first: Int, last: Int, skip: Int): [Business!]!
  id: Int!
  name: String!
}

input CategoryCreateOneWithoutBusinessesInput {
  connect: CategoryWhereUniqueInput
  create: CategoryCreateWithoutBusinessesInput
}

input CategoryCreateWithoutBusinessesInput {
  name: String!
}

input CategoryWhereUniqueInput {
  id: Int
}

type Mutation {
  createOneVoucher(data: VoucherCreateInput!): Voucher!
}

type Query {
  businesses(after: BusinessWhereUniqueInput, before: BusinessWhereUniqueInput, first: Int, last: Int, skip: Int): [Business!]!
  vouchers(after: VoucherWhereUniqueInput, before: VoucherWhereUniqueInput, first: Int, last: Int, skip: Int): [Voucher!]!
}

type Tag {
  id: Int!
  name: String!
  vouchers(after: VoucherWhereUniqueInput, before: VoucherWhereUniqueInput, first: Int, last: Int, skip: Int): [Voucher!]!
}

input TagCreateManyWithoutVouchersInput {
  connect: [TagWhereUniqueInput!]
  create: [TagCreateWithoutVouchersInput!]
}

input TagCreateWithoutVouchersInput {
  name: String!
}

input TagWhereUniqueInput {
  id: Int
}

type Voucher {
  business: Business
  description: String!
  expirationDate: String
  id: Int!
  imageUrl: String!
  name: String!
  price: Float!
  promotion: Float
  tags(after: TagWhereUniqueInput, before: TagWhereUniqueInput, first: Int, last: Int, skip: Int): [Tag!]!
}

input VoucherCreateInput {
  business: BusinessCreateOneWithoutVouchersInput
  description: String!
  expirationDate: String
  imageUrl: String!
  name: String!
  price: Float!
  promotion: Float
  tags: TagCreateManyWithoutVouchersInput
}

input VoucherWhereUniqueInput {
  id: Int
  name: String
}
