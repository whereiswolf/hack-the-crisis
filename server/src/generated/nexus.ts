/**
 * This file was automatically generated by GraphQL Nexus
 * Do not make changes to this file directly
 */

import * as Context from "../context"
import * as prisma from "@prisma/client"



declare global {
  interface NexusGenCustomOutputProperties<TypeName extends string> {
    crud: NexusPrisma<TypeName, 'crud'>
    model: NexusPrisma<TypeName, 'model'>
  }
}

declare global {
  interface NexusGen extends NexusGenTypes {}
}

export interface NexusGenInputs {
  BusinessCreateOneWithoutVouchersInput: { // input type
    connect?: NexusGenInputs['BusinessWhereUniqueInput'] | null; // BusinessWhereUniqueInput
    create?: NexusGenInputs['BusinessCreateWithoutVouchersInput'] | null; // BusinessCreateWithoutVouchersInput
  }
  BusinessCreateWithoutVouchersInput: { // input type
    address: string; // String!
    amount: number; // Float!
    category?: NexusGenInputs['CategoryCreateOneWithoutBusinessesInput'] | null; // CategoryCreateOneWithoutBusinessesInput
    city: string; // String!
    description: string; // String!
    history?: string | null; // String
    imageUrl: string; // String!
    name: string; // String!
    siteUrl?: string | null; // String
    type: string; // String!
  }
  BusinessWhereUniqueInput: { // input type
    id?: number | null; // Int
  }
  CategoryCreateOneWithoutBusinessesInput: { // input type
    connect?: NexusGenInputs['CategoryWhereUniqueInput'] | null; // CategoryWhereUniqueInput
    create?: NexusGenInputs['CategoryCreateWithoutBusinessesInput'] | null; // CategoryCreateWithoutBusinessesInput
  }
  CategoryCreateWithoutBusinessesInput: { // input type
    name: string; // String!
  }
  CategoryWhereUniqueInput: { // input type
    id?: number | null; // Int
  }
  TagCreateManyWithoutVouchersInput: { // input type
    connect?: NexusGenInputs['TagWhereUniqueInput'][] | null; // [TagWhereUniqueInput!]
    create?: NexusGenInputs['TagCreateWithoutVouchersInput'][] | null; // [TagCreateWithoutVouchersInput!]
  }
  TagCreateWithoutVouchersInput: { // input type
    name: string; // String!
  }
  TagWhereUniqueInput: { // input type
    id?: number | null; // Int
  }
  VoucherCreateInput: { // input type
    business?: NexusGenInputs['BusinessCreateOneWithoutVouchersInput'] | null; // BusinessCreateOneWithoutVouchersInput
    description: string; // String!
    expirationDate?: string | null; // String
    imageUrl: string; // String!
    name: string; // String!
    price: number; // Float!
    promotion?: number | null; // Float
    tags?: NexusGenInputs['TagCreateManyWithoutVouchersInput'] | null; // TagCreateManyWithoutVouchersInput
  }
  VoucherWhereUniqueInput: { // input type
    id?: number | null; // Int
    name?: string | null; // String
  }
}

export interface NexusGenEnums {
}

export interface NexusGenRootTypes {
  Business: prisma.Business;
  Category: prisma.Category;
  Mutation: {};
  Query: {};
  Tag: prisma.Tag;
  Voucher: prisma.Voucher;
  String: string;
  Int: number;
  Float: number;
  Boolean: boolean;
  ID: string;
}

export interface NexusGenAllTypes extends NexusGenRootTypes {
  BusinessCreateOneWithoutVouchersInput: NexusGenInputs['BusinessCreateOneWithoutVouchersInput'];
  BusinessCreateWithoutVouchersInput: NexusGenInputs['BusinessCreateWithoutVouchersInput'];
  BusinessWhereUniqueInput: NexusGenInputs['BusinessWhereUniqueInput'];
  CategoryCreateOneWithoutBusinessesInput: NexusGenInputs['CategoryCreateOneWithoutBusinessesInput'];
  CategoryCreateWithoutBusinessesInput: NexusGenInputs['CategoryCreateWithoutBusinessesInput'];
  CategoryWhereUniqueInput: NexusGenInputs['CategoryWhereUniqueInput'];
  TagCreateManyWithoutVouchersInput: NexusGenInputs['TagCreateManyWithoutVouchersInput'];
  TagCreateWithoutVouchersInput: NexusGenInputs['TagCreateWithoutVouchersInput'];
  TagWhereUniqueInput: NexusGenInputs['TagWhereUniqueInput'];
  VoucherCreateInput: NexusGenInputs['VoucherCreateInput'];
  VoucherWhereUniqueInput: NexusGenInputs['VoucherWhereUniqueInput'];
}

export interface NexusGenFieldTypes {
  Business: { // field return type
    address: string; // String!
    amount: number; // Float!
    category: NexusGenRootTypes['Category'] | null; // Category
    city: string; // String!
    description: string; // String!
    history: string | null; // String
    id: number; // Int!
    imageUrl: string; // String!
    name: string; // String!
    siteUrl: string | null; // String
    vouchers: NexusGenRootTypes['Voucher'][]; // [Voucher!]!
  }
  Category: { // field return type
    businesses: NexusGenRootTypes['Business'][]; // [Business!]!
    id: number; // Int!
    name: string; // String!
  }
  Mutation: { // field return type
    createOneVoucher: NexusGenRootTypes['Voucher']; // Voucher!
  }
  Query: { // field return type
    businesses: NexusGenRootTypes['Business'][]; // [Business!]!
    vouchers: NexusGenRootTypes['Voucher'][]; // [Voucher!]!
  }
  Tag: { // field return type
    id: number; // Int!
    name: string; // String!
    vouchers: NexusGenRootTypes['Voucher'][]; // [Voucher!]!
  }
  Voucher: { // field return type
    business: NexusGenRootTypes['Business'] | null; // Business
    description: string; // String!
    expirationDate: string | null; // String
    id: number; // Int!
    imageUrl: string; // String!
    name: string; // String!
    price: number; // Float!
    promotion: number | null; // Float
    tags: NexusGenRootTypes['Tag'][]; // [Tag!]!
  }
}

export interface NexusGenArgTypes {
  Category: {
    businesses: { // args
      after?: NexusGenInputs['BusinessWhereUniqueInput'] | null; // BusinessWhereUniqueInput
      before?: NexusGenInputs['BusinessWhereUniqueInput'] | null; // BusinessWhereUniqueInput
      first?: number | null; // Int
      last?: number | null; // Int
      skip?: number | null; // Int
    }
  }
  Mutation: {
    createOneVoucher: { // args
      data: NexusGenInputs['VoucherCreateInput']; // VoucherCreateInput!
    }
  }
  Query: {
    businesses: { // args
      after?: NexusGenInputs['BusinessWhereUniqueInput'] | null; // BusinessWhereUniqueInput
      before?: NexusGenInputs['BusinessWhereUniqueInput'] | null; // BusinessWhereUniqueInput
      first?: number | null; // Int
      last?: number | null; // Int
      skip?: number | null; // Int
    }
    vouchers: { // args
      after?: NexusGenInputs['VoucherWhereUniqueInput'] | null; // VoucherWhereUniqueInput
      before?: NexusGenInputs['VoucherWhereUniqueInput'] | null; // VoucherWhereUniqueInput
      first?: number | null; // Int
      last?: number | null; // Int
      skip?: number | null; // Int
    }
  }
  Tag: {
    vouchers: { // args
      after?: NexusGenInputs['VoucherWhereUniqueInput'] | null; // VoucherWhereUniqueInput
      before?: NexusGenInputs['VoucherWhereUniqueInput'] | null; // VoucherWhereUniqueInput
      first?: number | null; // Int
      last?: number | null; // Int
      skip?: number | null; // Int
    }
  }
  Voucher: {
    tags: { // args
      after?: NexusGenInputs['TagWhereUniqueInput'] | null; // TagWhereUniqueInput
      before?: NexusGenInputs['TagWhereUniqueInput'] | null; // TagWhereUniqueInput
      first?: number | null; // Int
      last?: number | null; // Int
      skip?: number | null; // Int
    }
  }
}

export interface NexusGenAbstractResolveReturnTypes {
}

export interface NexusGenInheritedFields {}

export type NexusGenObjectNames = "Business" | "Category" | "Mutation" | "Query" | "Tag" | "Voucher";

export type NexusGenInputNames = "BusinessCreateOneWithoutVouchersInput" | "BusinessCreateWithoutVouchersInput" | "BusinessWhereUniqueInput" | "CategoryCreateOneWithoutBusinessesInput" | "CategoryCreateWithoutBusinessesInput" | "CategoryWhereUniqueInput" | "TagCreateManyWithoutVouchersInput" | "TagCreateWithoutVouchersInput" | "TagWhereUniqueInput" | "VoucherCreateInput" | "VoucherWhereUniqueInput";

export type NexusGenEnumNames = never;

export type NexusGenInterfaceNames = never;

export type NexusGenScalarNames = "Boolean" | "Float" | "ID" | "Int" | "String";

export type NexusGenUnionNames = never;

export interface NexusGenTypes {
  context: Context.Context;
  inputTypes: NexusGenInputs;
  rootTypes: NexusGenRootTypes;
  argTypes: NexusGenArgTypes;
  fieldTypes: NexusGenFieldTypes;
  allTypes: NexusGenAllTypes;
  inheritedFields: NexusGenInheritedFields;
  objectNames: NexusGenObjectNames;
  inputNames: NexusGenInputNames;
  enumNames: NexusGenEnumNames;
  interfaceNames: NexusGenInterfaceNames;
  scalarNames: NexusGenScalarNames;
  unionNames: NexusGenUnionNames;
  allInputTypes: NexusGenTypes['inputNames'] | NexusGenTypes['enumNames'] | NexusGenTypes['scalarNames'];
  allOutputTypes: NexusGenTypes['objectNames'] | NexusGenTypes['enumNames'] | NexusGenTypes['unionNames'] | NexusGenTypes['interfaceNames'] | NexusGenTypes['scalarNames'];
  allNamedTypes: NexusGenTypes['allInputTypes'] | NexusGenTypes['allOutputTypes']
  abstractTypes: NexusGenTypes['interfaceNames'] | NexusGenTypes['unionNames'];
  abstractResolveReturn: NexusGenAbstractResolveReturnTypes;
}


declare global {
  interface NexusGenPluginTypeConfig<TypeName extends string> {
  }
  interface NexusGenPluginFieldConfig<TypeName extends string, FieldName extends string> {
  }
  interface NexusGenPluginSchemaConfig {
  }
}